// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String
  gender   String
  age      Int
  password String

  created_at DateTime @default(now())

  updated_at DateTime @updatedAt

  deleted_at DateTime?

  booksCreated Book[] @relation("BookCreatedBy")
  booksUpdated Book[] @relation("BookUpdatedBy")
  booksDeleted Book[] @relation("BookDeletedBy")

  authorsCreated Author[] @relation("AuthorCreatedBy")
  authorsUpdated Author[] @relation("AuthorUpdatedBy")
  authorsDeleted Author[] @relation("AuthorDeletedBy")
}

model Author {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  dob          DateTime?
  language     String
  biography    String?
  website      String?
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  deleted_at   DateTime?
  created_by   Int
  updated_by   Int?
  deleted_by   Int?
  createdBy    User           @relation("AuthorCreatedBy", fields: [created_by], references: [id])
  updatedBy    User?          @relation("AuthorUpdatedBy", fields: [updated_by], references: [id])
  deletedBy    User?          @relation("AuthorDeletedBy", fields: [deleted_by], references: [id])
  BookToAuthor BookToAuthor[]
}

model Book {
  id            Int            @id @default(autoincrement())
  title         String
  author        String
  description   String
  publishedYear Int
  isbn          String
  genre         String
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  deleted_at    DateTime?
  created_by    Int
  updated_by    Int?
  deleted_by    Int?
  createdBy     User           @relation("BookCreatedBy", fields: [created_by], references: [id])
  updatedBy     User?          @relation("BookUpdatedBy", fields: [updated_by], references: [id])
  deletedBy     User?          @relation("BookDeletedBy", fields: [deleted_by], references: [id])
  BookToAuthor  BookToAuthor[]
}

model BookToAuthor {
  id       Int    @id @default(autoincrement())
  bookId   Int
  authorId Int
  book     Book   @relation(fields: [bookId], references: [id])
  author   Author @relation(fields: [authorId], references: [id])
}
